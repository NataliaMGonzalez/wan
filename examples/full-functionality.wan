program full_functionality;

# A character that can bend the elements.
class Bender {
  int power;
  int hp;
}

Waterbender katara;

class Waterbender << Bender {
  int water_power;

  action waterFreeze() {
    if (1 + my:power > 10) {
      print("The water froze.");
    } else {
      print("The water did not freeze.");
    }
    my:test();
  }

  action test() {
    print("If you see this, then self functions work");
  }
}

class Firebender << Bender {
  bool can_lightbend;
}

int fibonacci_result;
int fibonacci_to_do;
class Mathematician {
  int factorial(int num) {
    fibonacci_result = 5;

    if (num == 0) {
      return 1;
    }
    return num * factorial(num - 1);
  }
}

int strength, proficiency, intelligence;
float power;
char name[30];
katara:test();
Firebender zuko;
katara:power = 100;
katara:hp = 100;
int new_water_power;
katara:power = 15;
katara:waterFreeze();

Mathematician ko_jin;
int factorial_to_do, factorial_result;
print("Factorial: ");
factorial_to_do = input();
factorial_result = ko_jin:factorial(factorial_to_do);
print(factorial_result);
